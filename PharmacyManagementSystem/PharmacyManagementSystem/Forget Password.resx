<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtBxUsername.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="txtBxUsername.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>